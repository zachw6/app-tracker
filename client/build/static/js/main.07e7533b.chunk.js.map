{"version":3,"sources":["Component/Application.js","Component/AddApplication.js","Component/EditApplication.js","Component/Dashboard.js","Component/Login.js","App.js","index.js"],"names":["moment","require","Application","props","useState","droppedDown","setDroppedDown","toggleDropDown","className","style","fontWeight","companyName","position","appliedDate","format","status","interviewTime","location","interviewer","followUp","documentsSubmitted","map","doc","notes","note","onClick","AddApplication","Date","setAppliedDate","setInterviewTime","setDocumentsSubmitted","setNotes","toggleAdding","onSubmit","event","preventDefault","axios","method","url","data","token","sessionStorage","getItem","appData","document","getElementById","value","then","res","access","getApplications","color","fontSize","required","type","name","id","width","selected","onChange","date","getElementsByClassName","display","height","showTimeSelect","dateFormat","timeFormat","documentsSubmittedCopy","includes","push","notesCopy","length","index","e","findIndex","element","splice","console","error","removeDocumentElement","marginBottom","removeNoteElement","EditApplication","toDate","useEffect","i","checkInterviewScheduled","toggleEditing","_id","applicationId","updateEditedApplication","defaultValue","Dashboard","applicationLoaded","setApplicationLoaded","applications","setApplications","isAddingApplication","setIsAddingApplication","isUpdatingApplication","setIsUpdatingApplication","applicationIndex","setApplicationIndex","filteredApplications","setFilteredApplications","filterText","setFilterText","applicationSent","inCommunication","interviewScheduled","pendingResponse","jobOffered","jobAccepted","jobRejected","filters","setFilters","editMode","setEditMode","updateApplicationDetails","setUpdateApplicationDetails","showFilterScreen","setShowFilterScreen","checkWidth","window","innerWidth","showFilters","addEventListener","updateFilters","filtersCopy","Object","assign","filteredApplicationsArr","checked","forEach","application","toLowerCase","sort","a","b","newApplications","updateIndex","toggleAddingApplication","toggleEditingApplication","backgroundColor","paddingTop","applicationsCopy","logout","to","placeholder","borderBottom","marginTop","xmlns","fill","viewBox","d","removeId","updatedApplications","Login","clientId","buttonText","onSuccess","tokenId","removeItem","setItem","loginFunc","onFailure","cookiePolicy","App","login","setLogin","setName","title","log","exact","path","paddingBottom","state","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.07e7533b.chunk.js","sourcesContent":["import React from 'react'\r\nimport {useState, useEffect} from 'react';\r\nimport '../css/dashboard.css'\r\n\r\nconst moment = require('moment');\r\n\r\nexport default function Application(props) {\r\n\r\n    const [droppedDown, setDroppedDown] = useState(false);\r\n\r\n    const toggleDropDown = () => {\r\n        setDroppedDown(!droppedDown);\r\n    }\r\n\r\n    if(droppedDown){\r\n        return (        \r\n        <div className=\"applicationContainer\">\r\n        <div className=\"applicationHeader\"><div className=\"companyPosition\"><span style={{fontWeight: 'bold'}}>{props.companyName}</span> - {props.position}</div><div className=\"appliedDate\">Applied: {moment(props.appliedDate).format('MM/DD/YYYY')}</div></div>\r\n        <div className=\"applicationBody\">\r\n            <div><span style={{fontWeight: 'bold'}}>Status: </span> {props.status} {props.status === \"Interview Scheduled\" ? \"(\" + moment(props.interviewTime).format('MM/DD/YYYY h:mm A') + \")\" : null}</div>\r\n            <div><span style={{fontWeight: 'bold'}}>Location: </span> {props.location}</div>\r\n            <div><span style={{fontWeight: 'bold'}}>Interviewer: </span> {props.interviewer}</div>\r\n            <div><span style={{fontWeight: 'bold'}}>Follow-Up: </span> {props.followUp ? \"True\" : \"False\"}</div>\r\n            <div><span style={{fontWeight: 'bold'}}>Documents Submitted: </span> {props.documentsSubmitted.map( (doc) => { return <li key={doc}>{doc}</li> })}</div>\r\n            <div><span style={{fontWeight: 'bold'}}>Additional Notes: </span> {props.notes.map ( (note) => { return <li key={note}>{note}</li>})}</div>\r\n        </div>\r\n        <button onClick={toggleDropDown} className=\"applicationFooter\">LESS DETAILS</button>\r\n    </div>)\r\n    } else {\r\n        return (        \r\n        <div className=\"applicationContainer\">\r\n        <div className=\"applicationHeader\"><div className=\"companyPosition\"><span style={{fontWeight: 'bold'}}>{props.companyName}</span> - {props.position}</div><div className=\"appliedDate\">Applied: {moment(props.appliedDate).format('MM/DD/YYYY')}</div></div>        <div className=\"applicationBody\">\r\n            <div><span style={{fontWeight: 'bold'}}>Status: </span> {props.status} {props.status === \"Interview Scheduled\" ? \"(\" + moment(props.interviewTime).format('MM/DD/YYYY h:mm A') + \")\" : null}</div>\r\n            <div><span style={{fontWeight: 'bold'}}>Location: </span> {props.location}</div>\r\n        </div>\r\n        <button onClick={toggleDropDown} className=\"applicationFooter\">MORE DETAILS</button>\r\n    </div>)\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../css/dashboard.css';\r\nimport '../css/addApplicationStyles.css'\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {useState} from 'react'\r\n\r\nexport default function AddApplication(props) {\r\n\r\n    const [appliedDate, setAppliedDate] = useState(new Date());\r\n    const [interviewTime, setInterviewTime] = useState(new Date());\r\n    const [documentsSubmitted, setDocumentsSubmitted] = useState([]);\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    const addSubmittedDocument = () => {\r\n        let documentsSubmittedCopy = [...documentsSubmitted];\r\n        if(!documentsSubmittedCopy.includes(document.getElementById('submittedDocument').value)){\r\n            documentsSubmittedCopy.push(document.getElementById('submittedDocument').value);\r\n            setDocumentsSubmitted(documentsSubmittedCopy);\r\n        }\r\n    }\r\n\r\n    const addNote = () => {\r\n        let notesCopy = [...notes];\r\n        if(!notesCopy.includes(document.getElementById('note').value)){\r\n            notesCopy.push(document.getElementById('note').value);\r\n            setNotes(notesCopy);\r\n        }\r\n    }\r\n\r\n    const checkInterviewScheduled = () => {\r\n        if(document.getElementById('status').value === \"Interview Scheduled\"){\r\n            document.getElementsByClassName('interviewSchedule')[0].style.display = \"block\";\r\n            document.getElementsByClassName('notesDocsContainer')[0].style.height = \"15em\";\r\n        } else {\r\n            document.getElementsByClassName('interviewSchedule')[0].style.display = \"none\";\r\n            document.getElementsByClassName('notesDocsContainer')[0].style.height = \"10.3em\";\r\n        }\r\n    }\r\n\r\n    const removeNoteElement = (e, note) => {\r\n        let notesCopy = [...notes];\r\n        if(notesCopy.includes(note)){\r\n            let index = notesCopy.findIndex(element => element === note);\r\n            notesCopy.splice(index, 1);\r\n            setNotes(notesCopy);\r\n        } else {\r\n            console.error(\"There was a problem removing the note.\")\r\n        }\r\n    }\r\n\r\n    const removeDocumentElement = (e, document) => {\r\n        let documentsSubmittedCopy = [...documentsSubmitted];\r\n        if(documentsSubmittedCopy.includes(document)){\r\n            let index = documentsSubmittedCopy.findIndex(element => element === document);\r\n            documentsSubmittedCopy.splice(index, 1);\r\n            setDocumentsSubmitted(documentsSubmittedCopy);\r\n        } else {\r\n            console.error(\"There was a problem removing the document.\")\r\n        }\r\n    }\r\n\r\n    const createApplication = (event) => {\r\n        event.preventDefault();\r\n        axios({\r\n          method: \"POST\",\r\n          url: \"https://www.apptracker.app/user/createApplication\",\r\n          data: {token: sessionStorage.getItem('loginToken'), \r\n          appData: \r\n            {\r\n            companyName: document.getElementById('companyName').value,\r\n            position: document.getElementById('position').value,\r\n            appliedDate: appliedDate,\r\n            status: document.getElementById('status').value,\r\n            interviewTime: interviewTime,\r\n            location: document.getElementById('location').value,\r\n            interviewer: document.getElementById('interviewer').value,\r\n            followUp: document.getElementById('followUp').value,\r\n            documentsSubmitted: documentsSubmitted,\r\n            notes: notes\r\n            }\r\n        }\r\n      }).then(res => {\r\n          if(res.data.access !== \"denied\"){\r\n              props.getApplications();\r\n              props.toggleAdding();\r\n          }\r\n      });\r\n    }\r\n\r\n    return (\r\n        <div className=\"addApplication\">\r\n            <div className=\"addApplicationContainer\">\r\n                <div className=\"addApplicationHeader\"><h2>Add Application</h2><button className=\"blueButton\" onClick={props.toggleAdding}>&#10006;</button></div>\r\n                    <form className=\"addApplicationForm\" onSubmit={createApplication}>\r\n                        <div className=\"formContainer\">\r\n                            {/* Right side of form */ }\r\n                            <div className=\"leftSideForm\">\r\n                                <h3 className=\"addApplicationTitle\">Company Name <span style={{color: '#fb2424', fontSize:'0.6em'}}>(REQUIRED)</span></h3><input required type=\"text\" name=\"companyName\" id=\"companyName\"></input><br />\r\n                                <h3 className=\"addApplicationTitle\">Position <span style={{color: '#fb2424', fontSize:'0.6em'}}>(REQUIRED)</span></h3><input required type=\"text\" name=\"position\" id=\"position\"></input><br />\r\n                                <h3 className=\"addApplicationTitle\">Applied <span style={{color: '#fb2424', fontSize:'0.6em'}}>(REQUIRED)</span></h3><div style={{width: '100%'}}><DatePicker required selected={appliedDate} onChange={date => setAppliedDate(date)} /></div>\r\n                                \r\n                                <h3 className=\"addApplicationTitle\">Status <span style={{color: '#fb2424', fontSize:'0.6em'}}>(REQUIRED)</span></h3>\r\n                                    <div className=\"addApplicationSelect\"><select required className=\"addApplicationSelect\" onChange={checkInterviewScheduled} name=\"status\" id=\"status\">\r\n                                        <option value=\"Application Sent\">Application Sent</option>\r\n                                        <option value=\"In Communication\">In Communication</option>\r\n                                        <option value=\"Interview Scheduled\">Interview Scheduled</option>\r\n                                        <option value=\"Pending Response\">Pending Response</option>\r\n                                        <option value=\"Job Offer\">Job Offered</option>\r\n                                        <option value=\"Job Accepted\">Job Accepted</option>\r\n                                        <option value=\"Rejected\">Rejected</option>\r\n                                    </select></div>\r\n\r\n                                <div className=\"interviewSchedule\">\r\n                                    <h3 className=\"addApplicationTitle\">Interview Date/Time</h3>\r\n                                    <div style={{width: '100%'}}><DatePicker selected={interviewTime} onChange={date => setInterviewTime(date)} showTimeSelect dateFormat=\"Pp\" timeFormat=\"p\" /></div></div>\r\n                                <h3 className=\"addApplicationTitle\">Location: </h3><input type=\"text\" name=\"location\" id=\"location\"></input>\r\n                                <h3 className=\"addApplicationTitle\">Interviewer: </h3><input type=\"text\" name=\"interviewer\" id=\"interviewer\"></input>\r\n                                <h3 className=\"addApplicationTitle\">Follow-Up: </h3>\r\n                                <div className=\"addApplicationSelect\"><select required name=\"followUp\" id=\"followUp\">\r\n                                    <option value=\"false\">Incomplete</option>\r\n                                    <option value=\"true\">Complete</option>\r\n                                </select></div>\r\n                                <br />\r\n                            </div>\r\n\r\n                            {/* Left side of form */ }\r\n                            <div className=\"rightSideForm\">\r\n                                <h3 className=\"addApplicationTitle\">Documents Submitted: </h3>\r\n                                <div className=\"addApplicationSelect\"><select required name=\"submittedDocument\" id=\"submittedDocument\">\r\n                                    <option value=\"Resume\">Resume</option>\r\n                                    <option value=\"Cover Letter\">Cover Letter</option>\r\n                                    <option value=\"Transcript\">Transcript</option>\r\n                                    <option value=\"Portfolio\">Portfolio</option>\r\n                                    <option value=\"Letters of Recommendation\">Letters of Recommendation</option>\r\n                                    <option value=\"References List\">References List</option>\r\n                                    <option value=\"Other\">Other</option>\r\n                                </select> </div>\r\n                                <button type=\"button\" className=\"blueButton\" onClick={addSubmittedDocument}>Add Document</button> <br />\r\n                                \r\n                                <h3 className=\"addApplicationTitle\">Notes: </h3><textarea type=\"text\" name=\"note\" id=\"note\"></textarea><br />\r\n                                <button type=\"button\" className=\"blueButton\" onClick= { addNote } >Add Note</button>\r\n\r\n                                <div className=\"notesDocsContainer\">\r\n                                    {documentsSubmitted.length > 0 ? <h4>Submitted Documents</h4> : null }\r\n                                    { documentsSubmitted.map((doc, index) => {\r\n                                    return <div key = {\"doc\" + index}><li>{index + 1}) {doc} <button type=\"button\" onClick={(e) => { removeDocumentElement(e, doc) }}>&#10006;</button></li></div>\r\n                                }) }\r\n                                    {notes.length > 0 && documentsSubmitted.length > 0 ? <div style={{marginBottom: '10px'}}></div> : null}\r\n                                    {notes.length > 0 ? <h4>Notes</h4> : null }\r\n                                    { notes.map((note, index) => {\r\n                                    return <div key = {\"note\" + index}><li>{index + 1}) {note} <button type=\"button\" onClick={(e) => { removeNoteElement(e, note) }}>&#10006;</button></li></div>\r\n                                }) }\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <br />\r\n                        </div>\r\n                        <input type=\"submit\" name=\"Submit\" value=\"Create Application\"/>\r\n                    </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../css/dashboard.css';\r\nimport '../css/addApplicationStyles.css'\r\nimport axios from 'axios';\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport {useState, useEffect} from 'react'\r\n\r\nexport default function EditApplication(props) {\r\n\r\n    const moment = require('moment');\r\n\r\n    const [appliedDate, setAppliedDate] = useState(moment(props.appliedDate).toDate());\r\n    const [interviewTime, setInterviewTime] = useState(moment(props.interviewTime).toDate());\r\n    const [documentsSubmitted, setDocumentsSubmitted] = useState([]);\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    useEffect( () => {\r\n        let documentsSubmittedCopy = [];\r\n        let notesCopy = [];\r\n        for(let i = 0; i < props.documentsSubmitted.length; i++)\r\n            documentsSubmittedCopy.push(props.documentsSubmitted[i]);\r\n        for(let i = 0; i < props.notes.length; i++)\r\n            notesCopy.push(props.notes[i]);\r\n        setDocumentsSubmitted(documentsSubmittedCopy);\r\n        setNotes(notesCopy);\r\n        checkInterviewScheduled();\r\n    }, [props.documentsSubmitted, props.notes])\r\n\r\n    const addSubmittedDocument = () => {\r\n        let documentsSubmittedCopy = [...documentsSubmitted];\r\n        if(!documentsSubmittedCopy.includes(document.getElementById('submittedDocument').value)){\r\n            documentsSubmittedCopy.push(document.getElementById('submittedDocument').value);\r\n            setDocumentsSubmitted(documentsSubmittedCopy);\r\n        }\r\n    }\r\n\r\n    const addNote = () => {\r\n        let notesCopy = [...notes];\r\n        if(!notesCopy.includes(document.getElementById('note').value)){\r\n            notesCopy.push(document.getElementById('note').value);\r\n            setNotes(notesCopy);\r\n        }\r\n    }\r\n\r\n    const checkInterviewScheduled = () => {\r\n        if(document.getElementById('status').value === \"Interview Scheduled\"){\r\n            document.getElementsByClassName('interviewSchedule')[0].style.display = \"block\";\r\n            document.getElementsByClassName('notesDocsContainer')[0].style.height = \"15em\";\r\n        } else {\r\n            document.getElementsByClassName('interviewSchedule')[0].style.display = \"none\";\r\n            document.getElementsByClassName('notesDocsContainer')[0].style.height = \"10.3em\";\r\n        }\r\n    }\r\n\r\n    const removeNoteElement = (e, note) => {\r\n        let notesCopy = [...notes];\r\n        if(notesCopy.includes(note)){\r\n            let index = notesCopy.findIndex(element => element === note);\r\n            notesCopy.splice(index, 1);\r\n            setNotes(notesCopy);\r\n        } else {\r\n            console.error(\"There was a problem removing the note.\")\r\n        }\r\n    }\r\n\r\n    const removeDocumentElement = (e, document) => {\r\n        let documentsSubmittedCopy = [...documentsSubmitted];\r\n        if(documentsSubmittedCopy.includes(document)){\r\n            let index = documentsSubmittedCopy.findIndex(element => element === document);\r\n            documentsSubmittedCopy.splice(index, 1);\r\n            setDocumentsSubmitted(documentsSubmittedCopy);\r\n        } else {\r\n            console.error(\"There was a problem removing the document.\")\r\n        }\r\n    }\r\n\r\n    const updateApplication = (event) => {\r\n        event.preventDefault();\r\n        axios({\r\n          method: \"POST\",\r\n          url: \"https://www.apptracker.app/user/updateApplication\",\r\n          data: {token: sessionStorage.getItem('loginToken'), \r\n          appData: \r\n            {\r\n            _id: props.applicationId,\r\n            companyName: document.getElementById('companyName').value,\r\n            position: document.getElementById('position').value,\r\n            appliedDate: appliedDate,\r\n            status: document.getElementById('status').value,\r\n            interviewTime: interviewTime,\r\n            location: document.getElementById('location').value,\r\n            interviewer: document.getElementById('interviewer').value,\r\n            followUp: document.getElementById('followUp').value,\r\n            documentsSubmitted: documentsSubmitted,\r\n            notes: notes\r\n            }\r\n        }\r\n      }).then(res => {\r\n          if(res.data.access !== \"denied\"){\r\n            props.updateEditedApplication(props.applicationId, \r\n                appliedDate, \r\n                document.getElementById('companyName').value, \r\n                document.getElementById('position').value, \r\n                document.getElementById('location').value, \r\n                document.getElementById('interviewer').value, \r\n                document.getElementById('status').value, \r\n                interviewTime, \r\n                document.getElementById('followUp').value, \r\n                documentsSubmitted, \r\n                notes);\r\n            props.toggleEditing();\r\n        }\r\n          \r\n      });\r\n    }\r\n\r\n    return (\r\n        <div className=\"addApplication\">\r\n            <div className=\"addApplicationContainer\">\r\n                <div className=\"addApplicationHeader\"><h2>Update Application</h2><button className=\"blueButton\" onClick={props.toggleEditing}>&#10006;</button></div>\r\n                    <form className=\"addApplicationForm\" onSubmit={updateApplication}>\r\n                        <div className=\"formContainer\">\r\n                            {/* Right side of form */ }\r\n                            <div className=\"leftSideForm\">\r\n                                <h3 className=\"addApplicationTitle\">Company Name <span style={{color: '#fb2424', fontSize:'0.6em'}}>(REQUIRED)</span></h3><input required type=\"text\" name=\"companyName\" id=\"companyName\" defaultValue={props.companyName}></input><br />\r\n                                <h3 className=\"addApplicationTitle\">Position <span style={{color: '#fb2424', fontSize:'0.6em'}}>(REQUIRED)</span></h3><input required type=\"text\" name=\"position\" id=\"position\" defaultValue={props.position}></input><br />\r\n                                <h3 className=\"addApplicationTitle\">Applied <span style={{color: '#fb2424', fontSize:'0.6em'}}>(REQUIRED)</span></h3><div style={{width: '100%'}}><DatePicker required selected={appliedDate} onChange={date => setAppliedDate(date)} /></div>\r\n                                \r\n                                <h3 className=\"addApplicationTitle\">Status <span style={{color: '#fb2424', fontSize:'0.6em'}}>(REQUIRED)</span></h3>\r\n                                    <div className=\"addApplicationSelect\"><select required className=\"addApplicationSelect\" onChange={checkInterviewScheduled} name=\"status\" id=\"status\" defaultValue={props.status}>\r\n                                        <option value=\"Application Sent\">Application Sent</option>\r\n                                        <option value=\"In Communication\">In Communication</option>\r\n                                        <option value=\"Interview Scheduled\">Interview Scheduled</option>\r\n                                        <option value=\"Pending Response\">Pending Response</option>\r\n                                        <option value=\"Job Offer\">Job Offered</option>\r\n                                        <option value=\"Job Accepted\">Job Accepted</option>\r\n                                        <option value=\"Rejected\">Rejected</option>\r\n                                    </select></div>\r\n\r\n                                <div className=\"interviewSchedule\">\r\n                                    <h3 className=\"addApplicationTitle\">Interview Date/Time</h3>\r\n                                    <div style={{width: '100%'}}><DatePicker selected={interviewTime} onChange={date => setInterviewTime(date)} showTimeSelect dateFormat=\"Pp\" timeFormat=\"p\" /></div></div>\r\n                                    <h3 className=\"addApplicationTitle\">Location </h3><input type=\"text\" name=\"location\" id=\"location\" defaultValue={props.location}></input>\r\n                                <h3 className=\"addApplicationTitle\">Interviewer </h3><input type=\"text\" name=\"interviewer\" id=\"interviewer\" defaultValue={props.interviewer}></input>\r\n                                <h3 className=\"addApplicationTitle\">Follow-Up </h3>\r\n                                <div className=\"addApplicationSelect\"><select required name=\"followUp\" id=\"followUp\" defaultValue={props.followUp}>\r\n                                    <option value=\"false\">Incomplete</option>\r\n                                    <option value=\"true\">Complete</option>\r\n                                </select></div>\r\n                                <br />\r\n                            </div>\r\n\r\n                            {/* Left side of form */ }\r\n                            <div className=\"rightSideForm\">\r\n                                <h3 className=\"addApplicationTitle\">Documents Submitted </h3>\r\n                                <div className=\"addApplicationSelect\"><select required name=\"submittedDocument\" id=\"submittedDocument\">\r\n                                    <option value=\"Resume\">Resume</option>\r\n                                    <option value=\"Cover Letter\">Cover Letter</option>\r\n                                    <option value=\"Transcript\">Transcript</option>\r\n                                    <option value=\"Portfolio\">Portfolio</option>\r\n                                    <option value=\"Letters of Recommendation\">Letters of Recommendation</option>\r\n                                    <option value=\"References List\">References List</option>\r\n                                    <option value=\"Other\">Other</option>\r\n                                </select> </div>\r\n                                <button type=\"button\" className=\"blueButton\" onClick={addSubmittedDocument}>Add Document</button> <br />\r\n                                \r\n                                <h3 className=\"addApplicationTitle\">Notes </h3><textarea type=\"text\" name=\"note\" id=\"note\"></textarea><br />\r\n                                <button type=\"button\" className=\"blueButton\" onClick= { addNote } >Add Note</button>\r\n\r\n                                <div className=\"notesDocsContainer\">\r\n                                    {documentsSubmitted.length > 0 ? <h4>Submitted Documents</h4> : null }\r\n                                    { documentsSubmitted.map((doc, index) => {\r\n                                    return <div key = {\"doc\" + index}><li>{index + 1}) {doc} <button type=\"button\" onClick={(e) => { removeDocumentElement(e, doc) }}>&#10006;</button></li></div>\r\n                                }) }\r\n                                    {notes.length > 0 && documentsSubmitted.length > 0 ? <div style={{marginBottom: '10px'}}></div> : null}\r\n                                    {notes.length > 0 ? <h4>Notes</h4> : null }\r\n                                    { notes.map((note, index) => {\r\n                                    return <div key = {\"note\" + index}><li>{index + 1}) {note} <button type=\"button\" onClick={(e) => { removeNoteElement(e, note) }}>&#10006;</button></li></div>\r\n                                }) }\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <br />\r\n                        </div>\r\n                        <input type=\"submit\" name=\"Submit\" value=\"Update Application\"/>\r\n                    </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import '../css/dashboard.css';\r\nimport '../css/filterStyles.css';\r\nimport React from 'react'\r\nimport {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Application from './Application';\r\nimport AddApplication from './AddApplication';\r\nimport EditApplication from './EditApplication';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst moment = require('moment');\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    const [applicationLoaded, setApplicationLoaded] = useState(false);\r\n    const [applications, setApplications] = useState([]);\r\n    const [isAddingApplication, setIsAddingApplication] = useState(false);\r\n    const [isUpdatingApplication, setIsUpdatingApplication] = useState(false);\r\n    const [applicationIndex, setApplicationIndex] = useState(0);\r\n    const [filteredApplications, setFilteredApplications] = useState([]);\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [filters, setFilters] = useState({\r\n        applicationSent: false,\r\n        inCommunication: false,\r\n        interviewScheduled: false,\r\n        pendingResponse: false,\r\n        jobOffered: false,\r\n        jobAccepted: false,\r\n        jobRejected: false\r\n    });\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [updateApplicationDetails, setUpdateApplicationDetails] = useState({});\r\n    const [showFilterScreen, setShowFilterScreen] = useState(false);\r\n\r\n    \r\n    const checkWidth = (e) => {\r\n        if(window.innerWidth >= 874){\r\n            if(!showFilterScreen) {\r\n                showFilters();\r\n            }\r\n        }\r\n\r\n        if(window.innerWidth < 874){\r\n            if(showFilterScreen) {\r\n                showFilters();\r\n            }\r\n        }\r\n    }\r\n    window.addEventListener('resize', checkWidth);\r\n    \r\n    const updateFilters = () => {\r\n        let filtersCopy = Object.assign({}, filters);\r\n        let filteredApplicationsArr = [];\r\n        if(document.getElementById(\"applicationSent\").checked){\r\n            filtersCopy.applicationSent = true;\r\n        } else {\r\n            filtersCopy.applicationSent = false;\r\n        }\r\n        if(document.getElementById(\"inCommunication\").checked){\r\n            filtersCopy.inCommunication = true;\r\n        } else {\r\n            filtersCopy.inCommunication = false;\r\n        }\r\n        if(document.getElementById(\"interviewScheduled\").checked){\r\n            filtersCopy.interviewScheduled = true;\r\n        } else {\r\n            filtersCopy.interviewScheduled = false;\r\n        }\r\n        if(document.getElementById(\"pendingResponse\").checked){\r\n            filtersCopy.pendingResponse = true;\r\n        } else {\r\n            filtersCopy.pendingResponse = false;\r\n        }\r\n        if(document.getElementById(\"jobOffered\").checked){\r\n            filtersCopy.jobOffered = true;\r\n        } else {\r\n            filtersCopy.jobOffered = false;\r\n        }\r\n        if(document.getElementById(\"jobAccepted\").checked){\r\n            filtersCopy.jobAccepted = true;\r\n        } else {\r\n            filtersCopy.jobAccepted = false;\r\n        }\r\n        if(document.getElementById(\"jobRejected\").checked){\r\n            filtersCopy.jobRejected = true;\r\n        } else {\r\n            filtersCopy.jobRejected = false;\r\n        }\r\n        \r\n        applications.forEach((application) => {\r\n            if((application.companyName.toLowerCase().includes(filterText.toLowerCase()) || application.position.toLowerCase().includes(filterText.toLowerCase()) || filterText.toLowerCase().includes(application.companyName.toLowerCase()) || filterText.toLowerCase().includes(application.position.toLowerCase()))){\r\n                if(filtersCopy.applicationSent && application.status === \"Application Sent\")\r\n                    filteredApplicationsArr.push(application);\r\n                if(filtersCopy.inCommunication && application.status === \"In Communication\")\r\n                    filteredApplicationsArr.push(application);\r\n                if(filtersCopy.interviewScheduled && application.status === \"Interview Scheduled\")\r\n                    filteredApplicationsArr.push(application);\r\n                if(filtersCopy.pendingResponse && application.status === \"Pending Response\")\r\n                    filteredApplicationsArr.push(application);\r\n                if(filtersCopy.jobOffered && application.status === \"Job Offered\")\r\n                    filteredApplicationsArr.push(application);\r\n                if(filtersCopy.jobAccepted && application.status === \"Job Accepted\")\r\n                    filteredApplicationsArr.push(application);\r\n                if(filtersCopy.jobRejected && application.status === \"Job Rejected\")\r\n                    filteredApplicationsArr.push(application);\r\n            }\r\n        });\r\n\r\n        if(!filtersCopy.applicationSent && !filtersCopy.inCommunication && !filtersCopy.interviewScheduled && !filtersCopy.pendingResponse && !filtersCopy.jobOffered && !filtersCopy.jobRejected && !filtersCopy.jobAccepted){\r\n           if(filterText.length === 0){\r\n                filteredApplicationsArr = [...applications];\r\n           }\r\n            applications.forEach((application) => {\r\n                if(filterText.length > 0 && (application.companyName.toLowerCase().includes(filterText.toLowerCase()) || application.position.toLowerCase().includes(filterText.toLowerCase()) || filterText.toLowerCase().includes(application.companyName.toLowerCase()) || filterText.toLowerCase().includes(application.position.toLowerCase())))\r\n                    filteredApplicationsArr.push(application);\r\n            });\r\n        }\r\n\r\n        // Sort the applications by date descending)\r\n        switch(document.getElementById(\"sortSelect\").value){\r\n            case \"Date (Descending)\":\r\n                filteredApplicationsArr.sort((a, b) => {\r\n                    return moment(b.appliedDate).format(\"YYYYMMDD\") - moment(a.appliedDate).format(\"YYYYMMDD\")});\r\n                    break;\r\n            case \"Date (Ascending)\":\r\n                filteredApplicationsArr.sort((a, b) => {\r\n                    return moment(a.appliedDate).format(\"YYYYMMDD\") - moment(b.appliedDate).format(\"YYYYMMDD\")});\r\n                    break;\r\n            default:\r\n                filteredApplicationsArr.sort((a, b) => {\r\n                    return moment(a.appliedDate).format(\"YYYYMMDD\") - moment(b.appliedDate).format(\"YYYYMMDD\")});\r\n                    break;\r\n                }\r\n        \r\n        setFilteredApplications(filteredApplicationsArr);\r\n        if(filters.applicationSent !== filtersCopy.applicationSent ||\r\n            filters.inCommunication !== filtersCopy.inCommunication ||\r\n            filters.interviewScheduled !== filtersCopy.interviewScheduled ||\r\n            filters.jobAccepted !== filtersCopy.jobAccepted ||\r\n            filters.jobOffered !== filtersCopy.jobOffered ||\r\n            filters.jobRejected !== filtersCopy.jobRejected ||\r\n            filters.pendingResponse !== filtersCopy.pendingResponse){\r\n            setFilters(filtersCopy);\r\n        }\r\n    }\r\n\r\n    const getApplications = () => {\r\n        axios({\r\n          method: \"POST\",\r\n          url: \"https://www.apptracker.app/user/applications\",\r\n          data: {token: sessionStorage.getItem('loginToken')}\r\n      }).then(res => {\r\n        setApplications([]);\r\n        let newApplications = [...applications];\r\n        let updateIndex = applicationIndex;\r\n        while(newApplications.length < res.data[0].applications.length){\r\n            newApplications.push(res.data[0].applications[updateIndex++]);\r\n        }\r\n        setApplicationIndex(updateIndex);\r\n        setApplications(newApplications);\r\n        setFilteredApplications(newApplications);\r\n        setApplicationLoaded(true);\r\n    });\r\n}\r\n\r\nconst removeApplication = (e, id) => {\r\n    axios({\r\n        method: \"POST\",\r\n        url: \"https://www.apptracker.app/user/applications/remove\",\r\n        data: {\r\n            token: sessionStorage.getItem('loginToken'),\r\n            removeId: id\r\n            }\r\n    }).then(res => {\r\n        if(res.data.status === \"Success\"){\r\n            let applicationsCopy = [...applications];\r\n            let updatedApplications = [...filteredApplications];\r\n            for(let i = 0; i < updatedApplications.length; i++){\r\n                if(updatedApplications[i]._id === id)\r\n                    updatedApplications.splice(i, 1);\r\n            }\r\n            for(let i = 0; i < applicationsCopy.length; i++){\r\n                if(applicationsCopy[i]._id === id)\r\n                    applicationsCopy.splice(i, 1);\r\n            }\r\n            setApplicationIndex(applicationIndex - 1);\r\n            setApplications(applicationsCopy);\r\n            updateFilters();\r\n            setFilteredApplications(updatedApplications);\r\n        } else {\r\n            console.error(\"There was an error removing the application.\")\r\n        }\r\n    })\r\n}\r\n\r\nconst toggleAddingApplication = () => {\r\n    setIsAddingApplication(!isAddingApplication);\r\n}\r\n\r\nconst toggleEditingApplication = () => {\r\n    setIsUpdatingApplication(!isUpdatingApplication);\r\n}\r\n\r\nconst startUpdatingApplication = (e, applicationId, appliedDate, companyName, position, location, interviewer, status, interviewTime, followUp, documentsSubmitted, notes) => {\r\n    setUpdateApplicationDetails({\r\n        applicationId,\r\n        appliedDate,\r\n        companyName,\r\n        position,\r\n        location,\r\n        interviewer,\r\n        status,\r\n        interviewTime,\r\n        followUp,\r\n        documentsSubmitted,\r\n        notes\r\n    });\r\n    toggleEditingApplication();\r\n}\r\n\r\nconst toggleEditMode = () => {\r\n    if(!editMode === true)\r\n        document.getElementsByClassName(\"btn_editMode\")[0].style.borderBottom = \"3px solid green\";\r\n    else\r\n        document.getElementsByClassName(\"btn_editMode\")[0].style.borderBottom = \"3px solid red\";\r\n    setEditMode(!editMode);\r\n}\r\n\r\nconst showFilters = () => {\r\n    if(window.innerWidth < 875 && !showFilterScreen){\r\n        document.getElementsByClassName(\"showFilters\")[0].style.backgroundColor = \"#ddd\"\r\n        document.getElementsByClassName(\"dashboardFilter\")[0].style.paddingTop = \"1em\";\r\n        document.getElementsByClassName(\"dashboardFilter\")[0].style.height = \"100%\";\r\n        setShowFilterScreen(true);\r\n    } else if(window.innerWidth < 875 && showFilterScreen) {\r\n        document.getElementsByClassName(\"showFilters\")[0].style.backgroundColor = \"#f0f0f0\"\r\n        document.getElementsByClassName(\"dashboardFilter\")[0].style.height = \"0%\";\r\n        document.getElementsByClassName(\"dashboardFilter\")[0].style.paddingTop = \"0em\";\r\n        setShowFilterScreen(false);\r\n    }\r\n}\r\n\r\nconst updateEditedApplications = (applicationId, appliedDate, companyName, position, location, interviewer, status, interviewTime, followUp, documentsSubmitted, notes) => {\r\n    let applicationsCopy = [...applications];\r\n    for(let i = 0; i < applicationsCopy.length; i++){\r\n        if(applicationsCopy[i]._id === applicationId){\r\n            applicationsCopy[i].appliedDate = appliedDate;\r\n            applicationsCopy[i].companyName = companyName;\r\n            applicationsCopy[i].position = position;\r\n            applicationsCopy[i].location = location;\r\n            applicationsCopy[i].interviewer = interviewer;\r\n            applicationsCopy[i].status = status;\r\n            applicationsCopy[i].interviewTime = interviewTime;\r\n            applicationsCopy[i].followUp = followUp;\r\n            applicationsCopy[i].documentsSubmitted = documentsSubmitted;\r\n            applicationsCopy[i].notes = notes;\r\n        }\r\n    }\r\n    setApplications(applicationsCopy);\r\n    updateFilters();\r\n}\r\n\r\n// eslint-disable-next-line\r\nuseEffect(() => { getApplications(); checkWidth();}, []);\r\nuseEffect(updateFilters, [filterText, filters, applications]);\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n        {isAddingApplication ? \r\n        <AddApplication \r\n        getApplications={getApplications} toggleAdding={toggleAddingApplication} /> : null}\r\n        {isUpdatingApplication ? \r\n        <EditApplication \r\n        applicationId={ updateApplicationDetails.applicationId } \r\n        getApplications={getApplications} \r\n        toggleEditing={toggleEditingApplication} \r\n        appliedDate={updateApplicationDetails.appliedDate} \r\n        companyName={updateApplicationDetails.companyName} \r\n        position={updateApplicationDetails.position} \r\n        location={updateApplicationDetails.location}\r\n        interviewer={updateApplicationDetails.interviewer} \r\n        status={updateApplicationDetails.status} \r\n        interviewTime={updateApplicationDetails.interviewTime} \r\n        followUp={updateApplicationDetails.followUp} \r\n        documentsSubmitted={updateApplicationDetails.documentsSubmitted} \r\n        notes={updateApplicationDetails.notes} \r\n        updateEditedApplication={updateEditedApplications}/> : null}\r\n            <div className=\"dashboardBody\">\r\n            <header >\r\n                <h1 className=\"title\">AppTracker</h1><h5 onClick={props.logout} ><Link to=\"/\">Logout</Link></h5>\r\n            </header>\r\n            <button onClick={showFilters} className=\"showFilters\">{showFilterScreen ? 'Hide Filters' : 'Set Filters'}</button>\r\n                <div className=\"dashboardFilter\">\r\n                    <h1>Filter: </h1>\r\n                        <input className=\"FilterTextBox\" name=\"filter\" id=\"filter\" placeholder=\"Company Name/Position\" onChange={()=>{setFilterText(document.getElementsByClassName(\"FilterTextBox\")[0].value);}}></input> <br />\r\n                        <div className=\"statusFilters\">\r\n                            <input type=\"checkbox\" id=\"applicationSent\" name=\"applicationSent\" value=\"applicationSent\" onChange={updateFilters}/>\r\n                            <label>Application Sent</label>\r\n                            <br />\r\n                            <input type=\"checkbox\" id=\"inCommunication\" name=\"inCommunication\" value=\"inCommunication\" onChange={updateFilters}/>\r\n                            <label>In Communication</label>\r\n                            <br />\r\n                            <input type=\"checkbox\" id=\"interviewScheduled\" name=\"interviewScheduled\" value=\"interviewScheduled\" onChange={updateFilters}/>\r\n                            <label>Interview Scheduled</label>\r\n                            <br />\r\n                            <input type=\"checkbox\" id=\"pendingResponse\" name=\"pendingResponse\" value=\"pendingResponse\" onChange={updateFilters}/>\r\n                            <label>Pending Response</label>\r\n                            <br />\r\n                            <input type=\"checkbox\" id=\"jobOffered\" name=\"jobOffered\" value=\"jobOffered\" onChange={updateFilters}/>\r\n                            <label>Job Offered</label>\r\n                            <br />\r\n                            <input type=\"checkbox\" id=\"jobAccepted\" name=\"jobAccepted\" value=\"jobAccepted\" onChange={updateFilters}/>\r\n                            <label>Job Accepted</label>\r\n                            <br />\r\n                            <input type=\"checkbox\" id=\"jobRejected\" name=\"jobRejected\" value=\"jobRejected\" onChange={updateFilters}/>\r\n                            <label>Job Rejected</label>\r\n                            <br />\r\n                        </div>\r\n                        <label>Sort: </label>\r\n                        <div className=\"filterSelect\"><select id=\"sortSelect\" name=\"sortSelect\" onChange={updateFilters}>\r\n                            <option>Date (Descending)</option>\r\n                            <option>Date (Ascending)</option>\r\n                        </select></div>\r\n                    </div>\r\n                <div className=\"dashboardApplications\">\r\n                    <div className=\"applicationsHeader\"><h1 style={{display: 'inline-block'}}>Applications ({filteredApplications.length})</h1><button onClick={toggleAddingApplication} className=\"btn_addApplication\" style={{display:'inline-block'}}>+</button><button onClick={toggleEditMode} className=\"btn_editMode\" style={{display:'inline-block'}}>Edit Mode</button></div>\r\n                    {applicationLoaded ? filteredApplications.map((application => {\r\n                                if(!editMode)\r\n                                    return <div key={application._id} style={{marginTop:'30px'}}><Application   companyName={application.companyName}\r\n                                                                                                                appliedDate={application.appliedDate} \r\n                                                                                                                position={application.position} \r\n                                                                                                                interviewer={application.interviewer} \r\n                                                                                                                status={application.status} \r\n                                                                                                                followUp={application.followUp} \r\n                                                                                                                documentsSubmitted={application.documentsSubmitted} \r\n                                                                                                                notes={application.notes} \r\n                                                                                                                interviewTime={new Date()}/>\r\n                                            </div>\r\n                                else\r\n                                    return <div key={application._id} style={{marginTop:'30px'}}>\r\n                                                <div className=\"editModeButtons\">\r\n                                                    <button onClick={(e) => { startUpdatingApplication(e, application._id, application.appliedDate, application.companyName, application.position, application.interviewer, application.status, application.interviewTime, application.followUp, application.documentsSubmitted, application.notes) }}>\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"/>\r\n                                                        </svg>\r\n                                                    </button>\r\n                                                    <span className=\"delete\"><button onClick={(e) => removeApplication(e, application._id)}>\r\n                                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                                                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\r\n                                                        <path d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\r\n                                                        </svg>\r\n                                                    </button>\r\n                                                    </span>\r\n                                                </div>\r\n                                                <Application    companyName={application.companyName}\r\n                                                                appliedDate={application.appliedDate}\r\n                                                                position={application.position}\r\n                                                                interviewer={application.interviewer}\r\n                                                                status={application.status}\r\n                                                                followUp={application.followUp}\r\n                                                                documentsSubmitted={application.documentsSubmitted}\r\n                                                                notes={application.notes}\r\n                                                                interviewTime={application.interviewTime}/>\r\n                                            </div>\r\n                    })) : <p style={{color: 'black'}}>Not logged in.</p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport axios from 'axios';\r\n\r\nconst clientId = '428799205209-2njsnee31fvi9mhv5nrqah05iffvhm8g.apps.googleusercontent.com';\r\n\r\nexport default function Login(props) {\r\n\r\n    const onSuccess = (res) => {\r\n        axios({\r\n            method: \"POST\",\r\n            url: \"https://www.apptracker.app/login/googlelogin\",\r\n            data: {tokenId: res.tokenId}\r\n        }).then(res => {\r\n            if(sessionStorage.getItem('loginToken') == null){\r\n                sessionStorage.setItem('loginToken', res.data.token);\r\n            } else {\r\n                sessionStorage.removeItem('loginToken');\r\n                sessionStorage.setItem('loginToken', res.data.token);\r\n            }\r\n            props.loginFunc(1);\r\n        });\r\n    };\r\n\r\n    const onFailure = (res) => {\r\n        props.loginFunc(0);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <GoogleLogin \r\n                clientId={clientId}\r\n                buttonText=\"Login with Google\"\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import './index.css';\r\nimport Dashboard from './Component/Dashboard'\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport React from 'react';\r\nimport Login from './Component/Login';\r\nimport {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n\r\n  const [login, setLogin] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  const loginTrue = (state) => {\r\n    setLogin(state);\r\n  }\r\n\r\n  const logOut = () => {\r\n    sessionStorage.removeItem(\"loginToken\");\r\n    setLogin(false);\r\n}\r\n\r\n  useEffect(() => {\r\n    if(sessionStorage.getItem('loginToken') == null){\r\n      setLogin(false);\r\n      document.title = \"Apptracker | Login\";\r\n  } else {\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"https://www.apptracker.app/user/verify\",\r\n      data: {token: sessionStorage.getItem('loginToken')}\r\n  }).then(res => {\r\n      if(res.data.access === 'granted'){\r\n        setName(res.data.name);\r\n        setLogin(true);\r\n        document.title = \"Apptracker | Dashboard\"\r\n      } else {\r\n        console.log(\"User not logged in.\")\r\n        setLogin(false);\r\n      }\r\n  });\r\n  }\r\n  }, [])\r\n\r\n  useEffect( () => {\r\n    if(sessionStorage.getItem('loginToken') != null){\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"https://www.apptracker.app/user/verify\",\r\n      data: {token: sessionStorage.getItem('loginToken')}\r\n  }).then(res => {\r\n      if(res.data.access === 'granted'){\r\n        setName(res.data.name);\r\n      }\r\n  });\r\n  }\r\n  }, [login])\r\n\r\n  return (\r\n    <Router>\r\n      <Route exact={true} path=\"/\">\r\n        <div className=\"homeCenter\">\r\n            <div className=\"centerContent\">\r\n              {login ? <h1 style={{paddingBottom: '20px'}}>Welcome to AppTracker, {name}</h1> : <h1 style={{paddingBottom: '20px'}}>Welcome to AppTracker</h1>}\r\n              <div>{login ? <Link to=\"./dashboard\"><button className=\"btn_dashboard\">Dashboard</button></Link> : <Login loginFunc={loginTrue}/>}</div>\r\n            </div>\r\n        </div>\r\n      </Route>\r\n      <Route exact={true} path=\"/dashboard\">\r\n        {login ? <Dashboard logout={logOut} /> : <Redirect to=\"/\" />}\r\n      </Route>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}